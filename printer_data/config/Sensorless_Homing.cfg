# This configuration file contains variables and macros specific for homing X and Y using stallguard rather than 
# physical switches. You will likely need to have DIAG jumpers installed on your mainboard and Klipper configured
# correctly for this to work.
# 
# More information can be found here: https://www.klipper3d.org/TMC_Drivers.html?h=sens#sensorless-homing
# 
# Be sure to [include] this .cfg file in printer.cfg **BEFORE** you have working SGTHRS values for
# [tmcXXXX stepper_x] and [tmcXXXX stepper_y] as that will simplify this process. If you already have SGTHRS
# values in your config, they will likely need adjusting after enabling this configuration.
# 
# Default motor current and homing speed are configured per axis in printer.cfg
# 
##################################
## XY Sensorless Homing Variables:

[gcode_macro _Sensorless_Homing_Variables]
description: Variables for sensorless homing X and Y 

variable_homing_current: 0.75                # The driver current that X and Y will be homed at, helps maintain consistency.
variable_clear_time: 1                      # Time in seconds to wait for stallguard registers to clear, default is 1 second.
variable_backoff_distance_x: 100              # Distance in mm to back off from X axis after homing.
variable_backoff_distance_y: 50              # Distance in mm to back off from Y axis after homing.
variable_z_hop_distance: 10                 # Distance to move Z away from printhead prior to homing, and after homing.
variable_first_homed_axis: 'X'              # First axis to home before Z is homed. Can be 'X' or 'Y'.

## The following variables are used for those who need to attach a dockable probe (Klicky, Euclid, etc) before homing the Z axis:

variable_probe_dock_enable: False
variable_attach_macro: 'Attach_Probe'
variable_detach_macro: 'Dock_Probe'

# The following variables are used for moving the printhead to a certain part of the bed before homing the Z axis:

variable_safe_z_enable: True               # Enables/disables moving the printhead before homing the Z axis.
variable_safe_x: 150                       # Safe X position to home the Z axis, leave at -128 to home to the center of the X axis.
variable_safe_y: 150                       # Safe Y position to home the Z axis, leave at -128 to home to the center of the Y axis.

# Do not modify below
gcode:

[gcode_macro _HOME_X]
gcode:
    {% set default_x_run = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set default_y_run = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set homing_current = printer["gcode_macro _Sensorless_Homing_Variables"].homing_current|float %}
    {% set homing_speed = ((printer.configfile.settings['stepper_x'].homing_speed * 60)|float) %}
    {% set clear_time = printer["gcode_macro _Sensorless_Homing_Variables"].clear_time|float %}
    {% set backoff_distance_x = printer["gcode_macro _Sensorless_Homing_Variables"].backoff_distance_x|int %}
  
    {% if 'y' not in printer.toolhead.homed_axes %}                     # Check if Y has not been homed
        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={homing_current}      # Set driver current for homing
        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={homing_current}      # Set driver current for homing
    {% endif %}

    G4 P{clear_time * 1000}                                         # Wait for stallguard to clear
    G28 X                                                           # Home X Axis
    G91                                                             # Relative movement
    {% if backoff_distance_x > 0 %}                                 # Check backoff distance
        G0 X-{backoff_distance_x} F{homing_speed}                       # Back off from X home
    {% endif %}
    G90                                                             # Absolute movement
    G0 X{printer.configfile.settings.stepper_x.position_endstop - backoff_distance_x} # This command removes any offset incurred from sensorless homing
    G4 P{clear_time * 1000}                                         # Wait for stallguard to clear

    {% if 'y' in printer.toolhead.homed_axes %}                         # Check if Y has been homed
        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={default_x_run}       # Set driver current to default
        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={default_y_run}       # Set driver current to default
    {% endif %}

[gcode_macro _HOME_Y]
gcode:
    {% set default_x_run = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set default_y_run = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set homing_current = printer["gcode_macro _Sensorless_Homing_Variables"].homing_current|float %}
    {% set homing_speed = ((printer.configfile.settings['stepper_y'].homing_speed * 60)|float) %}
    {% set clear_time = printer["gcode_macro _Sensorless_Homing_Variables"].clear_time|float %}
    {% set backoff_distance_y = printer["gcode_macro _Sensorless_Homing_Variables"].backoff_distance_y|int %}

    {% if 'x' not in printer.toolhead.homed_axes %}                     # Check if X has not been homed
        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={homing_current}      # Set driver current for homing
        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={homing_current}      # Set driver current for homing
    {% endif %}

    G4 P{clear_time * 1000}                                         # Wait for stallguard to clear
    G28 Y                                                           # Home X Axis
    G91                                                             # Relative movement
    {% if backoff_distance_y > 0 %}                                 # Check backoff distance
        G0 Y-{backoff_distance_y} F{homing_speed}                       # Back off from Y home
    {% endif %}
    G90                                                             # Absolute movement
    G0 Y{printer.configfile.settings.stepper_y.position_endstop - backoff_distance_y} # This command removes any offset incurred from sensorless homing
    G4 P{clear_time * 1000}                                         # Wait for stallguard to clear

    {% if 'x' in printer.toolhead.homed_axes %}                         # Check if X has been homed
        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={default_x_run}       # Set driver current to default
        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={default_y_run}       # Set driver current to default
    {% endif %}

# [homing_override]
# axes: xyz
# set_position_z: 0
# gcode:
#     {% set z_hop_distance = printer["gcode_macro _Sensorless_Homing_Variables"].z_hop_distance | float %}
#     {% set z_hop_speed = printer.configfile.settings['stepper_z'].homing_speed * 60 | float %}
#     {% set first_homed_axis = printer["gcode_macro _Sensorless_Homing_Variables"].first_homed_axis | string %}
#     {% set travel_speed = (printer.toolhead.max_velocity * 60) / 3 | float %}
#     {% set safe_x = printer["gcode_macro _Sensorless_Homing_Variables"].safe_x | float %}
#     {% set safe_y = printer["gcode_macro _Sensorless_Homing_Variables"].safe_y | float %}
#     {% set safe_z = printer["gcode_macro _Sensorless_Homing_Variables"].safe_z_enable | abs %}
#     {% set probe_dock_enable = printer["gcode_macro _Sensorless_Homing_Variables"].probe_dock_enable | abs %}
#     {% set attach_macro = printer["gcode_macro _Sensorless_Homing_Variables"].attach_macro | string %}
#     {% set detach_macro = printer["gcode_macro _Sensorless_Homing_Variables"].detach_macro | string %}
    
#     {% if safe_z == True %}
    
#         {% if safe_x == -128 %}
#             {% set safe_x = (printer.configfile.settings.stepper_x.position_max) /2 %}
#         {% endif %}
        
#         {% if safe_y == -128 %}
#             {% set safe_y = (printer.configfile.settings.stepper_y.position_max) /2 %}
#         {% endif %}
    
#     {% endif %}

#     {% if z_hop_distance > 0 %}
#         G91
#         G0 Z{z_hop_distance} F{z_hop_speed}
#         G90
#     {% endif %}

#     {% if first_homed_axis == 'X' %}
#         _HOME_X
#         _HOME_Y
#     {% endif %}

#     {% if first_homed_axis == 'Y' %}
#         _HOME_Y
#         _HOME_X
#     {% endif %}
    
#     {% if probe_dock_enable == True %}
#         {attach_macro}
#     {% endif %}

#     {% if safe_z == True %}
#         G0 X{safe_x} Y{safe_y} F{travel_speed}
#     {% endif %}
        
#         G28 Z

#     {% if z_hop_distance > 0 %}
#         G91
#         G0 Z{z_hop_distance} F{z_hop_speed}
#         G90
#     {% endif %}

#     {% if probe_dock_enable == True %}
#         {detach_macro}
#     {% endif %}
